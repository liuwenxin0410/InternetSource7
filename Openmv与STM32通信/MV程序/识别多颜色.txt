import sensor , image , time , math
from pyb import UART
import json

threshold_index = 2
thresholds = [(37, 67, 45, 84, 4, 68),         #red
             (34, 67, -55, -22, 2, 41),      #green
             (0, 69, -128, -5, -128, -15)]    #blue

sensor.reset()
sensor.set_pixformat(sensor.RGB565)
sensor.set_framesize(sensor.QVGA)
sensor.skip_frames(time = 2000)
sensor.set_auto_gain(False)
sensor.set_auto_whitebal(False)
clock = time.clock()

uart = UART(3,115200)
uart.init(115200,bits=8,parity = None,stop = 1)
def find_max(blobs):
    max_size = 0
    for blob in blobs :
        if blob.pixels()>max_size:
            max_blob = blob
            max_size = blob.pixels()
    return max_blob


###ÑÕÉ«´¦Àí###
while(True):
    clock.tick()
    img = sensor.snapshot()
    blobs_red = img.find_blobs([thresholds[0]], pixels_threshold=200, area_threshold=200, merge=True)
    blobs_green = img.find_blobs([thresholds[1]], pixels_threshold=200, area_threshold=200, merge=True)
    blobs_blue = img.find_blobs([thresholds[2]], pixels_threshold=200, area_threshold=200, merge=True)
    if blobs_red:
        for blob in blobs_red:
            img.draw_cross(blob.cx(),blob.cy())
            img.draw_rectangle(blob[0:4])
            X_red_Sign = 0
            Y_red_Sign = 0
            X_red_relative_dispalcement = blob.cx()
            Y_red_relative_displacement = 0
            X_green_Sign = 0
            Y_green_Sign = 0
            X_green_relative_dispancement = 0
            Y_green_relative_displacement = 0
            X_blue_Sign = 0
            Y_blue_Sign = 0
            X_blue_relative_displacement = 0
            Y_blue_relative_displacement = 0
            L_red = 0
            L_green = 0
            L_blue = 0

            #X_red_Sign = blob.cx()
            #Y_red_Sign = blob.cy()
    if blobs_green:
        for blob in blobs_green:
            img.draw_cross(blob.cx(),blob.cy())
            img.draw_rectangle(blob[0:4])
            X_red_Sign = 0
            Y_red_Sign = 0
            X_red_relative_dispalcement = 0
            Y_red_relative_displacement = 0
            X_green_Sign = 0
            Y_green_Sign = 0
            X_green_relative_dispancement = blob.cx()
            Y_green_relative_displacement = 0
            X_blue_Sign = 0
            Y_blue_Sign = 0
            X_blue_relative_displacement = 0
            Y_blue_relative_displacement = 0
            L_red = 0
            L_green = 0
            L_blue = 0
    if blobs_blue:
        for blob in blobs_blue:
            img.draw_cross(blob.cx(),blob.cy())
            img.draw_rectangle(blob[0:4])
            X_red_Sign = 0
            Y_red_Sign = 0
            X_red_relative_dispalcement = 0
            Y_red_relative_displacement = 0
            X_green_Sign = 0
            Y_green_Sign = 0
            X_green_relative_dispancement = 0
            Y_green_relative_displacement = 0
            X_blue_Sign = 0
            Y_blue_Sign = 0
            X_blue_relative_displacement = 1
            Y_blue_relative_displacement = 0
            L_red = 0
            L_green = 0
            L_blue = 0

    img_data = bytearray([0x2C,18,X_red_Sign,Y_red_Sign,X_red_relative_dispalcement,Y_red_relative_displacement,
                            X_green_Sign,Y_green_Sign,X_green_relative_dispancement,Y_green_relative_displacement,X_blue_Sign,
                            Y_blue_Sign,X_blue_relative_displacement,Y_blue_relative_displacement,
                            L_red,L_green,L_blue,0x5B])

    uart.write(img_data)
